

-- echo "set search_path to fmk; \\dt semaphores*" | psql rg_2015
-- cat semaphores.txt  |  awk -F'|' '{ print $2; }' | awk '{print "CREATE UNLOGGED TABLE fmk." $1 "( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL DEFAULT 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));";  }'

drop table if exists fmk.semaphores_adres;
drop table if exists fmk.semaphores_dest;
drop table if exists fmk.semaphores_dopr;
drop table if exists fmk.semaphores_epdv_kif;
drop table if exists fmk.semaphores_epdv_kuf;
drop table if exists fmk.semaphores_epdv_pdv;
drop table if exists fmk.semaphores_epdv_sg_kif;
drop table if exists fmk.semaphores_epdv_sg_kuf;
drop table if exists fmk.semaphores_fakt_doks;
drop table if exists fmk.semaphores_fakt_doks2;
drop table if exists fmk.semaphores_fakt_fakt;
drop table if exists fmk.semaphores_fakt_ftxt;
drop table if exists fmk.semaphores_fakt_gen_ug;
drop table if exists fmk.semaphores_fakt_gen_ug_p;
drop table if exists fmk.semaphores_fakt_rugov;
drop table if exists fmk.semaphores_fakt_ugov;
drop table if exists fmk.semaphores_fakt_upl;
drop table if exists fmk.semaphores_fin_anal;
drop table if exists fmk.semaphores_fin_budzet;
drop table if exists fmk.semaphores_fin_buiz;
drop table if exists fmk.semaphores_fin_fond;
drop table if exists fmk.semaphores_fin_funk;
drop table if exists fmk.semaphores_fin_izvje;
drop table if exists fmk.semaphores_fin_koliz;
drop table if exists fmk.semaphores_fin_koniz;
drop table if exists fmk.semaphores_fin_nalog;
drop table if exists fmk.semaphores_fin_parek;
drop table if exists fmk.semaphores_fin_sint;
drop table if exists fmk.semaphores_fin_suban;
drop table if exists fmk.semaphores_fin_ulimit;
drop table if exists fmk.semaphores_fin_zagli;
drop table if exists fmk.semaphores_jprih;
drop table if exists fmk.semaphores_kadev_0;
drop table if exists fmk.semaphores_kadev_1;
drop table if exists fmk.semaphores_kadev_cin;
drop table if exists fmk.semaphores_kadev_defrjes;
drop table if exists fmk.semaphores_kadev_globusl;
drop table if exists fmk.semaphores_kadev_k1;
drop table if exists fmk.semaphores_kadev_k2;
drop table if exists fmk.semaphores_kadev_mz;
drop table if exists fmk.semaphores_kadev_nac;
drop table if exists fmk.semaphores_kadev_nerdan;
drop table if exists fmk.semaphores_kadev_obrazdef;
drop table if exists fmk.semaphores_kadev_promj;
drop table if exists fmk.semaphores_kadev_rj;
drop table if exists fmk.semaphores_kadev_rjes;
drop table if exists fmk.semaphores_kadev_rjrmj;
drop table if exists fmk.semaphores_kadev_rmj;
drop table if exists fmk.semaphores_kadev_rrasp;
drop table if exists fmk.semaphores_kadev_uslovi;
drop table if exists fmk.semaphores_kadev_ves;
drop table if exists fmk.semaphores_kadev_zanim;
drop table if exists fmk.semaphores_kalk_doks;
drop table if exists fmk.semaphores_kalk_doks2;
drop table if exists fmk.semaphores_kalk_kalk;
drop table if exists fmk.semaphores_kalvir;
drop table if exists fmk.semaphores_kbenef;
drop table if exists fmk.semaphores_konto;
drop table if exists fmk.semaphores_kred;
drop table if exists fmk.semaphores_ld_ld;
drop table if exists fmk.semaphores_ld_norsiht;
drop table if exists fmk.semaphores_ld_obracuni;
drop table if exists fmk.semaphores_ld_parobr;
drop table if exists fmk.semaphores_ld_pk_data;
drop table if exists fmk.semaphores_ld_pk_radn;
drop table if exists fmk.semaphores_ld_radkr;
drop table if exists fmk.semaphores_ld_radn;
drop table if exists fmk.semaphores_ld_radsat;
drop table if exists fmk.semaphores_ld_radsiht;
drop table if exists fmk.semaphores_ld_rj;
drop table if exists fmk.semaphores_ld_tprsiht;
drop table if exists fmk.semaphores_ldvirm;
drop table if exists fmk.semaphores_mat_anal;
drop table if exists fmk.semaphores_mat_karkon;
drop table if exists fmk.semaphores_mat_nalog;
drop table if exists fmk.semaphores_mat_sint;
drop table if exists fmk.semaphores_mat_suban;
drop table if exists fmk.semaphores_objekti;
drop table if exists fmk.semaphores_os_amort;
drop table if exists fmk.semaphores_os_k1;
drop table if exists fmk.semaphores_os_os;
drop table if exists fmk.semaphores_os_promj;
drop table if exists fmk.semaphores_os_reval;
drop table if exists fmk.semaphores_partn;
drop table if exists fmk.semaphores_por;
drop table if exists fmk.semaphores_pos_doks;
drop table if exists fmk.semaphores_pos_dokspf;
drop table if exists fmk.semaphores_pos_kase;
drop table if exists fmk.semaphores_pos_odj;
drop table if exists fmk.semaphores_pos_osob;
drop table if exists fmk.semaphores_pos_pos;
drop table if exists fmk.semaphores_pos_promvp;
drop table if exists fmk.semaphores_pos_strad;
drop table if exists fmk.semaphores_relation;
drop table if exists fmk.semaphores_rnal_aops;
drop table if exists fmk.semaphores_rnal_aops_att;
drop table if exists fmk.semaphores_rnal_articles;
drop table if exists fmk.semaphores_rnal_contacts;
drop table if exists fmk.semaphores_rnal_customs;
drop table if exists fmk.semaphores_rnal_doc_it;
drop table if exists fmk.semaphores_rnal_doc_it2;
drop table if exists fmk.semaphores_rnal_doc_lit;
drop table if exists fmk.semaphores_rnal_doc_log;
drop table if exists fmk.semaphores_rnal_doc_ops;
drop table if exists fmk.semaphores_rnal_docs;
drop table if exists fmk.semaphores_rnal_e_aops;
drop table if exists fmk.semaphores_rnal_e_att;
drop table if exists fmk.semaphores_rnal_e_gr_att;
drop table if exists fmk.semaphores_rnal_e_gr_val;
drop table if exists fmk.semaphores_rnal_e_groups;
drop table if exists fmk.semaphores_rnal_elements;
drop table if exists fmk.semaphores_rnal_objects;
drop table if exists fmk.semaphores_rnal_ral;
drop table if exists fmk.semaphores_roba;
drop table if exists fmk.semaphores_sast;
drop table if exists fmk.semaphores_sifk;
drop table if exists fmk.semaphores_sifv;
drop table if exists fmk.semaphores_sii_promj;
drop table if exists fmk.semaphores_sii_sii;
drop table if exists fmk.semaphores_strspr;
drop table if exists fmk.semaphores_tippr;
drop table if exists fmk.semaphores_tippr2;
drop table if exists fmk.semaphores_trfp;
drop table if exists fmk.semaphores_trfp2;
drop table if exists fmk.semaphores_trfp3;
drop table if exists fmk.semaphores_valute;
drop table if exists fmk.semaphores_vposla;
drop table if exists fmk.semaphores_vprih;
drop table if exists fmk.semaphores_vrprim;

DROP schema IF EXISTS sem CASCADE;
CREATE SCHEMA  sem;
GRANT ALL ON SCHEMA sem TO xtrole;
COMMENT ON SCHEMA sem IS 'F18 semaphores';

CREATE UNLOGGED TABLE sem.adres( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.dest( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.dopr( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.epdv_kif( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.epdv_kuf( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.epdv_pdv( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.epdv_sg_kif( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.epdv_sg_kuf( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fakt_doks( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fakt_doks2( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fakt_fakt( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fakt_ftxt( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fakt_gen_ug( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fakt_gen_ug_p( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fakt_rugov( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fakt_ugov( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fakt_upl( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fin_anal( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fin_budzet( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fin_buiz( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fin_fond( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fin_funk( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fin_izvje( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fin_koliz( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fin_koniz( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fin_nalog( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fin_parek( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fin_sint( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fin_suban( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fin_ulimit( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.fin_zagli( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.jprih( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_0( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_1( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_cin( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_defrjes( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_globusl( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_k1( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_k2( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_mz( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_nac( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_nerdan( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_obrazdef( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_promj( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_rj( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_rjes( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_rjrmj( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_rmj( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_rrasp( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_uslovi( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_ves( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kadev_zanim( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kalk_doks( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kalk_doks2( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kalk_kalk( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kalvir( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kbenef( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.konto( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.kred( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.ld_ld( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.ld_norsiht( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.ld_obracuni( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.ld_parobr( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.ld_pk_data( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.ld_pk_radn( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.ld_radkr( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.ld_radn( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.ld_radsat( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.ld_radsiht( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.ld_rj( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.ld_tprsiht( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.ldvirm( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.mat_anal( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.mat_karkon( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.mat_nalog( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.mat_sint( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.mat_suban( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.objekti( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.os_amort( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.os_k1( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.os_os( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.os_promj( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.os_reval( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.partn( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.por( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.pos_doks( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.pos_dokspf( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.pos_kase( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.pos_odj( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.pos_osob( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.pos_pos( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.pos_promvp( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.pos_strad( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.relation( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.rnal_aops( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.rnal_aops_att( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.rnal_articles( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.rnal_contacts( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.rnal_customs( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.rnal_doc_it( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.rnal_doc_it2( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.rnal_doc_lit( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.rnal_doc_log( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.rnal_doc_ops( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.rnal_docs( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.rnal_e_aops( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.rnal_e_att( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.rnal_e_gr_att( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.rnal_e_gr_val( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.rnal_e_groups( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.rnal_elements( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.rnal_objects( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.rnal_ral( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.roba( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.sast( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.sifk( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.sifv( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.sii_promj( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.sii_sii( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.strspr( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.tippr( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.tippr2( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.trfp( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.trfp2( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.trfp3( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.valute( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.vposla( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.vprih( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL default 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));
CREATE UNLOGGED TABLE sem.vrprim( user_code character varying(20) NOT NULL, algorithm character(15) NOT NULL DEFAULT 'full'::bpchar, version bigint NOT NULL, last_trans_version bigint,last_trans_time timestamp without time zone DEFAULT now(),last_trans_user_code character varying(20),dat date,ids text[],PRIMARY KEY (user_code));


grant all privileges on table sem.adres TO xtrole;
grant all privileges on table sem.dest TO xtrole;
grant all privileges on table sem.dopr TO xtrole;
grant all privileges on table sem.epdv_kif TO xtrole;
grant all privileges on table sem.epdv_kuf TO xtrole;
grant all privileges on table sem.epdv_pdv TO xtrole;
grant all privileges on table sem.epdv_sg_kif TO xtrole;
grant all privileges on table sem.epdv_sg_kuf TO xtrole;
grant all privileges on table sem.fakt_doks TO xtrole;
grant all privileges on table sem.fakt_doks2 TO xtrole;
grant all privileges on table sem.fakt_fakt TO xtrole;
grant all privileges on table sem.fakt_ftxt TO xtrole;
grant all privileges on table sem.fakt_gen_ug TO xtrole;
grant all privileges on table sem.fakt_gen_ug_p TO xtrole;
grant all privileges on table sem.fakt_rugov TO xtrole;
grant all privileges on table sem.fakt_ugov TO xtrole;
grant all privileges on table sem.fakt_upl TO xtrole;
grant all privileges on table sem.fin_anal TO xtrole;
grant all privileges on table sem.fin_budzet TO xtrole;
grant all privileges on table sem.fin_buiz TO xtrole;
grant all privileges on table sem.fin_fond TO xtrole;
grant all privileges on table sem.fin_funk TO xtrole;
grant all privileges on table sem.fin_izvje TO xtrole;
grant all privileges on table sem.fin_koliz TO xtrole;
grant all privileges on table sem.fin_koniz TO xtrole;
grant all privileges on table sem.fin_nalog TO xtrole;
grant all privileges on table sem.fin_parek TO xtrole;
grant all privileges on table sem.fin_sint TO xtrole;
grant all privileges on table sem.fin_suban TO xtrole;
grant all privileges on table sem.fin_ulimit TO xtrole;
grant all privileges on table sem.fin_zagli TO xtrole;
grant all privileges on table sem.jprih TO xtrole;
grant all privileges on table sem.kadev_0 TO xtrole;
grant all privileges on table sem.kadev_1 TO xtrole;
grant all privileges on table sem.kadev_cin TO xtrole;
grant all privileges on table sem.kadev_defrjes TO xtrole;
grant all privileges on table sem.kadev_globusl TO xtrole;
grant all privileges on table sem.kadev_k1 TO xtrole;
grant all privileges on table sem.kadev_k2 TO xtrole;
grant all privileges on table sem.kadev_mz TO xtrole;
grant all privileges on table sem.kadev_nac TO xtrole;
grant all privileges on table sem.kadev_nerdan TO xtrole;
grant all privileges on table sem.kadev_obrazdef TO xtrole;
grant all privileges on table sem.kadev_promj TO xtrole;
grant all privileges on table sem.kadev_rj TO xtrole;
grant all privileges on table sem.kadev_rjes TO xtrole;
grant all privileges on table sem.kadev_rjrmj TO xtrole;
grant all privileges on table sem.kadev_rmj TO xtrole;
grant all privileges on table sem.kadev_rrasp TO xtrole;
grant all privileges on table sem.kadev_uslovi TO xtrole;
grant all privileges on table sem.kadev_ves TO xtrole;
grant all privileges on table sem.kadev_zanim TO xtrole;
grant all privileges on table sem.kalk_doks TO xtrole;
grant all privileges on table sem.kalk_doks2 TO xtrole;
grant all privileges on table sem.kalk_kalk TO xtrole;
grant all privileges on table sem.kalvir TO xtrole;
grant all privileges on table sem.kbenef TO xtrole;
grant all privileges on table sem.konto TO xtrole;
grant all privileges on table sem.kred TO xtrole;
grant all privileges on table sem.ld_ld TO xtrole;
grant all privileges on table sem.ld_norsiht TO xtrole;
grant all privileges on table sem.ld_obracuni TO xtrole;
grant all privileges on table sem.ld_parobr TO xtrole;
grant all privileges on table sem.ld_pk_data TO xtrole;
grant all privileges on table sem.ld_pk_radn TO xtrole;
grant all privileges on table sem.ld_radkr TO xtrole;
grant all privileges on table sem.ld_radn TO xtrole;
grant all privileges on table sem.ld_radsat TO xtrole;
grant all privileges on table sem.ld_radsiht TO xtrole;
grant all privileges on table sem.ld_rj TO xtrole;
grant all privileges on table sem.ld_tprsiht TO xtrole;
grant all privileges on table sem.ldvirm TO xtrole;
grant all privileges on table sem.mat_anal TO xtrole;
grant all privileges on table sem.mat_karkon TO xtrole;
grant all privileges on table sem.mat_nalog TO xtrole;
grant all privileges on table sem.mat_sint TO xtrole;
grant all privileges on table sem.mat_suban TO xtrole;
grant all privileges on table sem.objekti TO xtrole;
grant all privileges on table sem.os_amort TO xtrole;
grant all privileges on table sem.os_k1 TO xtrole;
grant all privileges on table sem.os_os TO xtrole;
grant all privileges on table sem.os_promj TO xtrole;
grant all privileges on table sem.os_reval TO xtrole;
grant all privileges on table sem.partn TO xtrole;
grant all privileges on table sem.por TO xtrole;
grant all privileges on table sem.pos_doks TO xtrole;
grant all privileges on table sem.pos_dokspf TO xtrole;
grant all privileges on table sem.pos_kase TO xtrole;
grant all privileges on table sem.pos_odj TO xtrole;
grant all privileges on table sem.pos_osob TO xtrole;
grant all privileges on table sem.pos_pos TO xtrole;
grant all privileges on table sem.pos_promvp TO xtrole;
grant all privileges on table sem.pos_strad TO xtrole;
grant all privileges on table sem.relation TO xtrole;
grant all privileges on table sem.rnal_aops TO xtrole;
grant all privileges on table sem.rnal_aops_att TO xtrole;
grant all privileges on table sem.rnal_articles TO xtrole;
grant all privileges on table sem.rnal_contacts TO xtrole;
grant all privileges on table sem.rnal_customs TO xtrole;
grant all privileges on table sem.rnal_doc_it TO xtrole;
grant all privileges on table sem.rnal_doc_it2 TO xtrole;
grant all privileges on table sem.rnal_doc_lit TO xtrole;
grant all privileges on table sem.rnal_doc_log TO xtrole;
grant all privileges on table sem.rnal_doc_ops TO xtrole;
grant all privileges on table sem.rnal_docs TO xtrole;
grant all privileges on table sem.rnal_e_aops TO xtrole;
grant all privileges on table sem.rnal_e_att TO xtrole;
grant all privileges on table sem.rnal_e_gr_att TO xtrole;
grant all privileges on table sem.rnal_e_gr_val TO xtrole;
grant all privileges on table sem.rnal_e_groups TO xtrole;
grant all privileges on table sem.rnal_elements TO xtrole;
grant all privileges on table sem.rnal_objects TO xtrole;
grant all privileges on table sem.rnal_ral TO xtrole;
grant all privileges on table sem.roba TO xtrole;
grant all privileges on table sem.sast TO xtrole;
grant all privileges on table sem.sifk TO xtrole;
grant all privileges on table sem.sifv TO xtrole;
grant all privileges on table sem.sii_promj TO xtrole;
grant all privileges on table sem.sii_sii TO xtrole;
grant all privileges on table sem.strspr TO xtrole;
grant all privileges on table sem.tippr TO xtrole;
grant all privileges on table sem.tippr2 TO xtrole;
grant all privileges on table sem.trfp TO xtrole;
grant all privileges on table sem.trfp2 TO xtrole;
grant all privileges on table sem.trfp3 TO xtrole;
grant all privileges on table sem.valute TO xtrole;
grant all privileges on table sem.vposla TO xtrole;
grant all privileges on table sem.vprih TO xtrole;
grant all privileges on table sem.vrprim TO xtrole;
